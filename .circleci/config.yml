version: 2
jobs:
  build:
    docker:
        - image: circleci/node
    steps:
      - checkout
       - setup_remote_docker
       - add_ssh_keys:
           fingerprints:
             - "d4:22:e0:82:69:3b:81:31:42:e1:68:75:2e:75:4b:d5"
      - run: npm install

version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "d4:22:e0:82:69:3b:81:31:42:e1:68:75:2e:75:4b:d5"
      - run:
          name: Build and push Docker image
          command: |
            echo "LOGIN"
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            echo "BUILD"
            docker build -t $DOCKER_USERNAME/minitwit-app:latest . -f Dockerfile-minitwit
            docker build -t $DOCKER_USERNAME/minitwit-mysql:latest . -f Dockerfile-mysql
            echo "PUSH"
            docker push $DOCKER_USERNAME/minitwit-app:latest
            docker push $DOCKER_USERNAME/minitwit-mysql:latest
      - run:
          name: Run pytest on build server
          command: |
            echo "Running Py tests...."
            docker build -t $DOCKER_USERNAME/minitwit-tests -f Dockerfile-minitwit-tests .
            echo "yes"Â | docker-compose up -d
            docker run -it --rm --network=itu-minitwit-network $DOCKER_USERNAME/minitwit-tests

     - run:
         name: Deploy app to Digital Ocean Server via Docker
         command: |
           ssh -o "StrictHostKeyChecking no" ${MT_USER}@${MT_SERVER} \
           "source /root/.bash_profile && \
           cd /vagrant && \
           docker-compose pull && \
           docker-compose up -d"
