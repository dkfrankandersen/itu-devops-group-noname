version: 2
jobs:
  Run tests on circleCI server:
    docker:
        - image: circleci/node
    steps:
      - checkout
      - setup_remote_docker

      - run: 
          name: Build docker images
          command: |
            echo "Building images..."
            docker build -t $DOCKER_USERNAME/minitwit-app -f ./dockerfiles/Dockerfile-minitwit .
            docker build -t $DOCKER_USERNAME/minitwit-tests -f ./dockerfiles/Dockerfile-minitwit-tests .

      - run:
          name: Run simulator api pytest on build server
          command: |
            echo "Setting up environment and running py-tests...."
            echo "yes" | docker-compose -f ./dockerfiles/docker-compose-test.yml up -d

  Deploy to digital ocean:
    docker:
      - image: cimg/base:2020.01
    branches:
      - release
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "d4:22:e0:82:69:3b:81:31:42:e1:68:75:2e:75:4b:d5"
      - run: 
          name: Build and push docker images to Dockerhub
          command: |
            echo "Logging in to Dockerhub..."
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

            echo "Building images..."
            docker build -t $DOCKER_USERNAME/minitwit-app -f ./dockerfiles/Dockerfile-minitwit .

            echo "Pushing images..."
            docker push $DOCKER_USERNAME/minitwit-app:latest

     - run:
         name: Deploy to Digital Ocean Server via Docker
         command: |
           scp -r ./dockerfiles/* ${MT_USER}@${MT_SERVER}:/minitwit/dockerfiles/ \
        #    ssh -o "StrictHostKeyChecking no" ${MT_USER}@${MT_SERVER} \
        #    "source /root/.bash_profile && \
        #    cd /minitwit && \
        #    docker-compose -f ./dockerfiles/ pull && \
        #    docker-compose -f ./dockerfiles/ up -d"

    # ----------------- TEMP: (WIP)
            # docker run -it --rm --network=minitwit-network $DOCKER_USERNAME/minitwit-tests

    #   - run: 
    #       name: Build and push to Dockerhub
    #       command: |
    #         echo "Login"
    #         echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    #         echo "Build app"
    #         docker build -t $DOCKER_USERNAME/minitwit-app . -f Dockerfile-minitwit
    #         docker build -t $DOCKER_USERNAME/minitwit-tests -f Dockerfile-minitwit-tests .

    #         echo "Push"
    #         docker push $DOCKER_USERNAME/minitwit-app
    #         docker push $DOCKER_USERNAME/minitwit-tests


    #         # docker build -t $DOCKER_USERNAME/minitwit-app -f Dockerfile-minitwit .
    #         # docker build -t $DOCKER_USERNAME/minitwit-tests -f Dockerfile-minitwit-tests .

    # ----------------- OLD:
    #   - run:
    #       name: Build and push Docker image
    #       command: |
    #         echo "LOGIN"
    #         echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
    #         echo "BUILD"
    #         docker build -t $DOCKER_USERNAME/minitwit-app:latest . -f Dockerfile-minitwit
    #         docker build -t $DOCKER_USERNAME/minitwit-mysql:latest . -f Dockerfile-mysql
    #         echo "PUSH"
    #         docker push $DOCKER_USERNAME/minitwit-app:latest
    #         docker push $DOCKER_USERNAME/minitwit-mysql:latest
    #   - run:
    #       name: Run pytest on build server
    #       command: |
    #         echo "Running Py tests...."
    #         docker build -t $DOCKER_USERNAME/minitwit-tests -f Dockerfile-minitwit-tests .
    #         echo "yes" | docker-compose up -d
    #         docker run -it --rm --network=itu-minitwit-network $DOCKER_USERNAME/minitwit-tests

    #  - run:
    #      name: Deploy app to Digital Ocean Server via Docker
    #      command: |
    #        ssh -o "StrictHostKeyChecking no" ${MT_USER}@${MT_SERVER} \
    #        "source /root/.bash_profile && \
    #        cd /vagrant && \
    #        docker-compose pull && \
    #        docker-compose up -d"
